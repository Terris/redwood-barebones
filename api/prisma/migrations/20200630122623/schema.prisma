datasource DS {
  provider = "mysql"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = env("BINARY_TARGET")
}

// Define your own datamodels here and run `yarn redwood db save` to create
// migrations for them.
model Book {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime?
  title String
  subtitle String?
  covers String?
  isbn String? @unique
  metaData String?
  localisations Localisation[]
  authors Author[] @relation(references: [id])
  ownerships Ownership[]
}

model Author {
  id String @id @default(cuid())
  name String @unique
  books Book[] @relation(references: [id])
}

model Category {
  id String @id @default(cuid())
  name String @unique
  books Book[]
}

model Publisher {
  id String @id @default(cuid())
  name String @unique
  books Book[]
}

model User {
  id String @id @default(cuid())
  uid String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime?
  handle String @unique
  email String @unique
  lastname String?
  firstname String?
  createdByTier Boolean @default(false)
  tokens Token[]
  configuration String?
  ownerships Ownership[]
  localisations Localisation[]
  contacts User[] @relation("Contact", references: [id])
  contactOf User[] @relation("Contact", references: [id])
}

model Token {
  id String @id @default(cuid())
  token String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime?
}


model Label {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime?
  name String
  user User @relation(fields: [userId], references: [id])
  userId String
  ownerships Ownership[] @relation(references: [id])

  @@unique([userId,name], name: "LabelOfUser")
}

model Loan {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime?
  beginAt DateTime @default(now())
  endAt DateTime?
  user User @relation(fields: [userId], references: [id])
  userId String
  ownerships Ownership[]
}

model Localisation {
  id String @id @default(cuid())
  name String
  address String
}

model Ownership {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime?
  rate Int?
  note String?
  book Book @relation(fields: [bookId], references: [id])
  bookId String
  labels Label[] @relation(references: [id])
  loanedIn Loan? @relation(fields: [loanId], references: [id])
  loanId String?
  user User @relation(fields: [userId], references: [id])
  userId String

  @@unique([bookId, userId], name: "BookOfUser")
}
